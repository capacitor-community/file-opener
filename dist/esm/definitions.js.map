{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * file open method options\n *\n * @since 1.0.0\n */\nexport interface FileOpenerOptions {\n  /**\n   * file path\n   *\n   * @since 1.0.0\n   */\n  filePath: string;\n  /**\n   * MIME type (optional)\n   *\n   * @since 1.0.0\n   */\n  contentType?: string;\n  /**\n   * Use the default platform chooser, if true, otherwise:\n   * On Android: it will show \"Open File in..\" title of the chooser dialog, the system will always present the chooser dialog\n   * even if the user has chosen a default one and if no activity is found to handle the file, the system will still\n   * present a dialog with the specified title and an error message No application can perform this action\n   * On iOS: it will presents a menu restricted to a list of apps capable of opening the current document.\n   * This determination is made based on the document type and on the document types supported by the installed apps.\n   * To support one or more document types, an app must register those types in its Info.plist file\n   * using the CFBundleDocumentTypes key.\n   *\n   * (optional) default value is true\n   *\n   * @since 1.0.0\n   */\n  openWithDefault?: boolean;\n  /**\n   * (iOS only; iPad only) Position to anchor the chooser (ShareSheet) menu in the view (optional)\n   * Please note that this is applicable only when the application runs on iPad and when\n   * openWithDefault is false, otherwise this is ignored\n   *\n   * @since 1.0.3\n   */\n   chooserPosition?: {\n    x: number;\n    y: number;\n  };\n}\n\nexport interface FileOpenerPlugin {\n  /**\n   * Method to open a file.\n   *\n   * @since 1.0.0\n   */\n  open(options: FileOpenerOptions): Promise<void>;\n}"]}